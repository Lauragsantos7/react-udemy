{"ast":null,"code":"var _jsxFileName = \"/home/laura/react-udemy/react-interme-avancado/first-project/src/components/RequestAPi.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RequestAPi extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: []\n    };\n    this.requestAllApis = async () => {\n      const postResponse = fetch(\"https://jsonplaceholder.typicode.com/posts\");\n      const photoResponse = fetch('https://jsonplaceholder.typicode.com/photos');\n      const [posts, photos] = await Promise.all([postResponse, photoResponse]);\n      const resultPost = await posts.json();\n      const resultPhoto = await photos.json();\n      const postsAndPhotos = resultPost.map((post, index) => {\n        return;\n      });\n      this.setState({\n        posts: resultPost\n      });\n    };\n  }\n  componentDidMount() {\n    this.requestAllApis();\n  }\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","RequestAPi","constructor","arguments","state","posts","requestAllApis","postResponse","fetch","photoResponse","photos","Promise","all","resultPost","json","resultPhoto","postsAndPhotos","map","post","index","setState","componentDidMount","render","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","body","id"],"sources":["/home/laura/react-udemy/react-interme-avancado/first-project/src/components/RequestAPi.jsx"],"sourcesContent":["import React, { Component } from \"react\";\n\nexport default class RequestAPi extends Component {\n  state = {\n    posts: [],\n  };\n\n  componentDidMount() {\n    this.requestAllApis();\n  }\n\n  requestAllApis = async () => {\n    const postResponse = fetch(\"https://jsonplaceholder.typicode.com/posts\");\n\n    const photoResponse = fetch('https://jsonplaceholder.typicode.com/photos');\n\n    const [posts, photos] = await Promise.all([postResponse, photoResponse]);\n\n    const resultPost = await posts.json();\n    const resultPhoto = await photos.json();\n    const postsAndPhotos = resultPost.map((post, index) => {\n        return \n    })\n\n    this.setState({ posts: resultPost });\n  };\n\n  render() {\n    const { posts } = this.state;\n    return (\n      <section className=\"container\">\n        <div className=\"posts\">\n          {posts.map((post) => (\n            <div key={post.id} className=\"post\">\n              <div className=\"post-content\">\n                <h1>{post.title}</h1>\n                <p>{post.body}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,MAAMC,UAAU,SAASH,SAAS,CAAC;EAAAI,YAAA;IAAA,SAAAC,SAAA;IAAA,KAChDC,KAAK,GAAG;MACNC,KAAK,EAAE;IACT,CAAC;IAAA,KAMDC,cAAc,GAAG,YAAY;MAC3B,MAAMC,YAAY,GAAGC,KAAK,CAAC,4CAA4C,CAAC;MAExE,MAAMC,aAAa,GAAGD,KAAK,CAAC,6CAA6C,CAAC;MAE1E,MAAM,CAACH,KAAK,EAAEK,MAAM,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAACL,YAAY,EAAEE,aAAa,CAAC,CAAC;MAExE,MAAMI,UAAU,GAAG,MAAMR,KAAK,CAACS,IAAI,EAAE;MACrC,MAAMC,WAAW,GAAG,MAAML,MAAM,CAACI,IAAI,EAAE;MACvC,MAAME,cAAc,GAAGH,UAAU,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACnD;MACJ,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAAC;QAAEf,KAAK,EAAEQ;MAAW,CAAC,CAAC;IACtC,CAAC;EAAA;EAlBDQ,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACf,cAAc,EAAE;EACvB;EAkBAgB,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEjB;IAAM,CAAC,GAAG,IAAI,CAACD,KAAK;IAC5B,oBACEJ,OAAA;MAASuB,SAAS,EAAC,WAAW;MAAAC,QAAA,eAC5BxB,OAAA;QAAKuB,SAAS,EAAC,OAAO;QAAAC,QAAA,EACnBnB,KAAK,CAACY,GAAG,CAAEC,IAAI,iBACdlB,OAAA;UAAmBuB,SAAS,EAAC,MAAM;UAAAC,QAAA,eACjCxB,OAAA;YAAKuB,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BxB,OAAA;cAAAwB,QAAA,EAAKN,IAAI,CAACO;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,eACrB7B,OAAA;cAAAwB,QAAA,EAAIN,IAAI,CAACY;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACd,GAJEX,IAAI,CAACa,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAMlB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEd;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}